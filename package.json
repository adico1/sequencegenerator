{
  "name": "@adico/sequencegenerator",
  "version": "1.0.1",
  "description": "Time Sortable Distributed Unique Id Generator based on Twitter Snowflake",
  "homepage": "https://github.com/adico1/sequencegenerator",
  "license": "MIT",
  "keywords": [
    "distributed",
    "generator",
    "id",
    "javascript",
    "snowflake",
    "sortable",
    "time",
    "twitter",
    "typed",
    "types",
    "typescript",
    "unique"
  ],
  "badges": {
    "list": [
      "travisci",
      "npmversion",
      "npmdownloads",
      "daviddm",
      "daviddmdev",
      "---",
      "githubsponsors",
      "patreon",
      "flattr",
      "liberapay",
      "buymeacoffee",
      "opencollective",
      "crypto",
      "paypal",
      "wishlist"
    ],
    "config": {
      "githubSponsorsUsername": "adico1",
      "buymeacoffeeUsername": "adico",
      "cryptoURL": "https://crypto.com/adico",
      "flattrUsername": "adico1",
      "liberapayUsername": "adico1",
      "opencollectiveUsername": "adico1",
      "patreonUsername": "adicoÂ§",
      "paypalURL": "https://paypal.me/adico1",
      "wishlistURL": "https://amazon.com/wishlist",
      "travisTLD": "com"
    }
  },
  "funding": "https://adico.tech/fund",
  "author": "2019+ adico <adico1@gmail.com> (http://adico.tech)",
  "maintainers": [
    "adico <adico1@gmail.com> (http://adico.tech)"
  ],
  "contributors": [
    "adico <adico1@gmail.com> (http://adico.tech)"
  ],
  "bugs": {
    "url": "https://github.com/adico1/sequencegenerator/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/adico1/sequencegenerator.git"
  },
  "engines": {
    "node": ">=8"
  },
  "editions": [
    {
      "description": "TypeScript source code with Import for modules",
      "directory": "src",
      "entry": "index.ts",
      "tags": [
        "typescript",
        "import"
      ],
      "engines": false
    },
    {
      "description": "TypeScript compiled against ESNext for Node.js with Require for modules",
      "directory": "edition-esnext",
      "entry": "index.js",
      "tags": [
        "javascript",
        "esnext",
        "require"
      ],
      "engines": {
        "node": true
      }
    },
    {
      "description": "TypeScript compiled against ES2018 for Node.js with Require for modules",
      "directory": "edition-es2018",
      "entry": "index.js",
      "tags": [
        "javascript",
        "es2018",
        "require"
      ],
      "engines": {
        "node": true
      }
    },
    {
      "description": "TypeScript compiled against ES2017 for Node.js with Require for modules",
      "directory": "edition-es2017",
      "entry": "index.js",
      "tags": [
        "javascript",
        "es2017",
        "require"
      ],
      "engines": {
        "node": true
      }
    },
    {
      "description": "TypeScript compiled against ES2016 for Node.js with Require for modules",
      "directory": "edition-es2016",
      "entry": "index.js",
      "tags": [
        "javascript",
        "es2016",
        "require"
      ],
      "engines": {
        "node": true
      }
    },
    {
      "description": "TypeScript compiled against ES2015 for Node.js with Require for modules",
      "directory": "edition-es2015",
      "entry": "index.js",
      "tags": [
        "javascript",
        "es2015",
        "require"
      ],
      "engines": {
        "node": true
      }
    },
    {
      "description": "TypeScript compiled against ES5 for Node.js with Require for modules",
      "directory": "edition-es5",
      "entry": "index.js",
      "tags": [
        "javascript",
        "es5",
        "require"
      ],
      "engines": {
        "node": true
      }
    },
    {
      "description": "TypeScript compiled against ES3 for Node.js with Require for modules",
      "directory": "edition-es3",
      "entry": "index.js",
      "tags": [
        "javascript",
        "es3",
        "require"
      ],
      "engines": {
        "node": true
      }
    }
  ],
  "types": "src/index.ts",
  "type": "commonjs",
  "main": "index.js",
  "dependencies": {
    "editions": "^2.3.0",
    "getmac": "^5.0.0"
  },
  "devDependencies": {
    "@types/jest": "^24.0.25",
    "@typescript-eslint/eslint-plugin": "^2.16.0",
    "@typescript-eslint/parser": "^2.16.0",
    "assert-helpers": "^5.8.0",
    "eslint": "^6.8.0",
    "eslint-config-bevry": "^2.3.0",
    "eslint-config-prettier": "^6.9.0",
    "eslint-plugin-prettier": "^3.1.2",
    "jest": "^24.9.0",
    "kava": "^4.4.0",
    "prettier": "^1.19.1",
    "projectz": "^1.19.0",
    "surge": "^0.21.3",
    "ts-jest": "^24.3.0",
    "typedoc": "^0.16.2",
    "typescript": "^3.7.4",
    "valid-directory": "^1.6.0"
  },
  "eslintConfig": {
    "extends": [
      "bevry"
    ]
  },
  "prettier": {
    "semi": false,
    "singleQuote": true
  },
  "scripts": {
    "my:build": "tsc",
    "my:coverage": "jest --coverage",
    "my:test": "jest",
    "our:build": "npm run my:build",
    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
    "our:compile": "npm run our:compile:edition-es2015 && npm run our:compile:edition-es2016 && npm run our:compile:edition-es2017 && npm run our:compile:edition-es2018 && npm run our:compile:edition-es3 && npm run our:compile:edition-es5 && npm run our:compile:edition-esnext",
    "our:compile:edition-es2015": "tsc --module commonjs --target ES2015 --outDir ./edition-es2015 --project tsconfig.json && test -d edition-es2015/src && ( mv edition-es2015/src edition-temp && rm -Rf edition-es2015 && mv edition-temp edition-es2015 ) || true",
    "our:compile:edition-es2016": "tsc --module commonjs --target ES2016 --outDir ./edition-es2016 --project tsconfig.json && test -d edition-es2016/src && ( mv edition-es2016/src edition-temp && rm -Rf edition-es2016 && mv edition-temp edition-es2016 ) || true",
    "our:compile:edition-es2017": "tsc --module commonjs --target ES2017 --outDir ./edition-es2017 --project tsconfig.json && test -d edition-es2017/src && ( mv edition-es2017/src edition-temp && rm -Rf edition-es2017 && mv edition-temp edition-es2017 ) || true",
    "our:compile:edition-es2018": "tsc --module commonjs --target ES2018 --outDir ./edition-es2018 --project tsconfig.json && test -d edition-es2018/src && ( mv edition-es2018/src edition-temp && rm -Rf edition-es2018 && mv edition-temp edition-es2018 ) || true",
    "our:compile:edition-es3": "tsc --module commonjs --target ES3 --outDir ./edition-es3 --project tsconfig.json && test -d edition-es3/src && ( mv edition-es3/src edition-temp && rm -Rf edition-es3 && mv edition-temp edition-es3 ) || true",
    "our:compile:edition-es5": "tsc --module commonjs --target ES5 --outDir ./edition-es5 --project tsconfig.json && test -d edition-es5/src && ( mv edition-es5/src edition-temp && rm -Rf edition-es5 && mv edition-temp edition-es5 ) || true",
    "our:compile:edition-esnext": "tsc --module commonjs --target ESNext --outDir ./edition-esnext --project tsconfig.json && test -d edition-esnext/src && ( mv edition-esnext/src edition-temp && rm -Rf edition-esnext && mv edition-temp edition-esnext ) || true",
    "our:coverage": "npm run my:coverage",
    "our:deploy": "echo no need for this project",
    "our:meta": "npm run our:meta:docs && npm run our:meta:projectz",
    "our:meta:docs": "npm run our:meta:docs:typedoc",
    "our:meta:docs:typedoc": "rm -Rf ./docs && typedoc --mode file --exclude '**/+(*test*|node_modules)' --excludeExternals --name \"$npm_package_name\" --readme ./README.md --out ./docs ./src",
    "our:meta:projectz": "projectz compile",
    "our:release": "npm run our:release:prepare && npm run our:release:check-changelog && npm run our:release:check-dirty && npm run our:release:tag && npm run our:release:push",
    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
    "our:release:check-dirty": "git diff --exit-code",
    "our:release:prepare": "npm run our:clean && npm run our:compile && npm run our:test && npm run our:meta",
    "our:release:push": "git push origin master && git push origin --tags",
    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
    "our:setup": "npm run our:setup:install",
    "our:setup:install": "npm install",
    "our:test": "npm run our:verify && npm test",
    "our:verify": "npm run our:verify:directory && npm run our:verify:eslint && npm run our:verify:prettier && npm run our:verify:typescript",
    "our:verify:directory": "valid-directory",
    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./src",
    "our:verify:prettier": "prettier --write ./src/** *.md",
    "our:verify:typescript": "tsc --noEmit --project tsconfig.json",
    "test": "node ./test.js"
  }
}
